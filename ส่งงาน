11.ตอบ   จัดเก็บการเปลี่ยนแปลงที่เกิดขึ้นกับไฟล์หนึ่งหรือหลายไฟล์เพื่อที่คุณสามารถเรียกเวอร์ชั่นใดเวอร์ชั่นหนึ่งกลับมาดูเมื่อไรก็ได้
12.ตอบ   ถ้าข้อมูลพัง1เครื่องก็ยังสามารถ ทำงานจากเครื่องอื่นได้ ซึ่งต่างจาก Centralized ซึ่ง ศูนย์กลางพังก็จะทำให้ Project History ทั้งหมดหายไปหมดเลย
13. ตอบ   มี Server เป็นศูนย์กลางในการเก็บข้อมูล สะดวกในการทำงาน เพียงแค่ดาวน์โหลดลงเครื่องชองตัวเอง
ซึ่งต่างจาก Distributed ที่ไม่มีศูนย์กลางคอยเก็บข้อมูล
14. ตอบ แก้โค้ดส่วนที่เป็นส่วนเกินออก แล้วแก้ไขใหม่ให้เรียบร้อย จากนั้นลองเช็คสถานะ เมื่อเรียบร้อย ก็ Commit เป็นอันเรียบร้อย
15. ตอบ   (1.) ทำการ merge บ่อยๆจะช่วยลดความขัดแย้งต่างๆลงไป (2.) ควรออกแบบให้ส่วนการทำงานเล็กๆ จะทำให้คุณภาพการออกแบบระบบดีและลดความเสี่ยงที่จะเกิด merge (3.) การพูดคุยสื่อสารภายในทีม (4.) การมาทำงานร่วมกันที่เดียวกัน
16. ตอบ  Git คือ Version Control ตัวหนึ่ง ซึ่งเป็นระบบที่มีหน้าที่ในการจัดเก็บการเปลี่ยนแปลงของไฟล์ในโปรเจ็คเรา มีการ backup code ให้เรา สามารถที่จะเรียกดูหรือย้อนกลับไปดูเวอร์ชั่นต่างๆของโปรเจ็คที่ใด เวลาใดก็ได้ หรือแม้แต่ดูว่าไฟล์นั้นๆใครเป็นคนเพิ่มหรือแก้ไข หรือว่าจะดูว่าไฟล์นั้นๆถูกเขียนโดยใครบ้างก็สามารถทำได้ ต่างจาก Github ตรงที่ Github คือ เว็บเซิฟเวอร์ที่ให้บริการในการฝากไฟล์ Git ส่วน Git คือ Version Control
17. ตอบ  คือการ แยกงานให้แต่ละกลุ่มพัฒนากันใน branch การแตก branch นั้นมันจะทำให้โค้ดของแต่ละกลุ่มไม่แตะต้องกัน คือ branch หนึ่งจะไม่เห็นการเปลี่ยนแปลงโค้ดของอีก branch หนึ่ง แยกอิสระกัน ทำให้การพัฒนาโค้ดง่ายขึ้น ถ้ากลุ่มไหนพัฒนาเสร็จก่อน ก็ไม่จำเป็นจะต้องรอให้อีกกลุ่มเสร็จ branch ที่แตกออกไปก็สามารถเทสโค้ดได้อย่างอิสระ
18. ตอบ  การทำ Fast Forward  คือ การที่ Git จะทำให้ทุกอย่างง่ายขึ้น ด้วยการขยับ Pointer ไปข้างหน้า  ทำไมการ push ไปที่ remote repo ควรใช้ merge นี้ เพราะ จะช่วยขยับ pointer ของ commit ที่จะ push มา
19. ตอบ  ดึงการเปลี่ยนแปลงล่าสุดจาก remote repository มายัง local repository โดย git จะทำการ ดึงข้อมูล และ รวมข้อมูล การเปลี่ยนแปลงจาก remote repository ในเครื่อง
20.  ตอบ  เป็นแนวทางในการแตก branch เป็นแนวทางในการทำให้งานราบรื่นมากขึ้น
